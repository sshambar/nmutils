#!/bin/bash
# -*- mode: sh; sh-basic-offset: 2; indent-tabs-mode: t -*-
# vim:set ft=sh sw=2 ts=2:
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Test suite for 08-ipv6-prefix
#   - tests functions used by dhclient
#
# shellcheck disable=SC2034,SC1090,SC2123

NMG_XTEST=${NMG_XTEST:-conf/nmg_xtest}
{ [[ -r ${NMG_XTEST} ]] && . "${NMG_XTEST}"; } ||
  { echo >&2 "Unable to load ${NMG_XTEST}"; exit 2; }

xtest_settime() {
  # <new-time>
  EPOCHREALTIME=${1-}
}

# checks each environment <var> contains $RUNDIR
xtest_check_statevars() {
  # <test-id> <var>...
  local id=$1 var
  shift
  for var in "$@"; do
    [[ ${!var-} ]] || shtest::fatal "Test $id: variable $var missing value"
    [[ ${!var} =~ $RUNDIR ]] ||
      shtest::fatal "Test $id: variable $var missing \$RUNDIR"
  done
  xret "$id" t "checking STATE_PAT variables"
}

# init sysctls for specific dhcp client (avoid "resetting ipv6" logs)
xtest_init_sysctls() {
  # "" | dhclient | dhcpcd
  local ra dir=${SYSCTL_PAT/@NODE@/${interface}}
  [[ ${1-} ]] || {
    [[ -d $dir ]] && {
      xrm "$dir/accept_ra"
      xrm "$dir/disable_ipv6"
      command -p rmdir "$dir"
    }
    return 0
  }
  case $1 in
    dhclient) ra=2 ;;
    dhcpcd) ra=0 ;;
    *) shtest::fatal "Usage: xtest_init_sysctls [ dhclient | dhcpcd ]" ;;
  esac
  command -p mkdir -p "$dir"
  echo "$ra" > "$dir/accept_ra"
}

xtest_dhcp_action() {
  # <id> <reason> <desc>
  local -x reason=$2
  # dhcp clients don't set CONN_ID
  local -x CONNECTION_UUID=''
  shtest::prefix "$2 - "
  xwrap ipv6_dhcp_action
  xret "$1" t "$3"
}

# perform ipv6_nm_action <action> on <wan>
xtest_nm_action() {
  # <id> <action> <wan> <desc>
  local -x NM_DISPATCHER_ACTION=$2 CONNECTION_UUID
  shtest::prefix "$2($3) - "
  # NM sets CONN_ID
  case $3 in
    eth0) CONNECTION_UUID="$office_uuid" ;;
    wan0) CONNECTION_UUID="$isp_uuid" ;;
    *) CONNECTION_UUID="00000000-0000-0000-0000-000000000000" ;;
  esac
  xwrap ipv6_nm_action "$3"
  xret "$1" t "$4"
}

xtest::onexit::lan() {
  [[ -d $RUNDIR ]] || return 0
  command -p rm -f "$RUNDIR/"*"-dhc"
}

xtest::group3::lan() {

  shtest::title "dhclient Prefix Assignment Tests (lan group)"

  # init state
  local init_cstate
  xread_value init_cstate <<-EOF
	conn-uuid:${isp_uuid}
	EOF
  echo >"$connstate2" "$init_cstate"

  xtest_check_statevars L1 LAN_STATE_PAT LAN_DDNS_STATE_PAT WAN_PFXSTATE_PAT

  # rename for easy cleanup
  local LAN_STATE_PAT="${LAN_STATE_PAT}-dhc"
  local LAN_DDNS_STATE_PAT="${LAN_DDNS_STATE_PAT}-dhc"
  local WAN_PFXSTATE_PAT="${WAN_PFXSTATE_PAT}-dhc"
  local WAN_CONFIG_PAT="$RUNDIR/ipv6-prefix-@WAN@.conf-dhc"

  # override for tests
  local wconf=${WAN_CONFIG_PAT/@WAN@/wan0}

  # hashs used in generated filenames
  local hash1 hash2
  nmg::hash hash1 "2001:db8:100::/56"; hash1+="+8899-wan0"
  nmg::hash hash2 "2001:db8:200::/56"; hash2+="+1122-wan0"

  local state1 state2 state3 state4 state5 state6
  local pstate1 pstate2 dstate1
  state1=${LAN_STATE_PAT/@LAN@-from-@ID@-@WAN@/br0-from-$hash1}
  state2=${LAN_STATE_PAT/@LAN@-from-@ID@-@WAN@/br0-from-$hash2}
  state3=${LAN_STATE_PAT/@LAN@-from-@ID@-@WAN@/br1-from-$hash1}
  state4=${LAN_STATE_PAT/@LAN@-from-@ID@-@WAN@/br1-from-$hash2}
  state5=${LAN_STATE_PAT/@LAN@-from-@ID@-@WAN@/brx-from-$hash1}
  state6=${LAN_STATE_PAT/@LAN@-from-@ID@-@WAN@/brx-from-$hash2}
  pstate1=${WAN_PFXSTATE_PAT/@ID@-@WAN@/$hash1}
  pstate2=${WAN_PFXSTATE_PAT/@ID@-@WAN@/$hash2}
  dstate1=${LAN_DDNS_STATE_PAT/@LAN@-from-@WAN@-@RREC@/br1-from-wan0-AAAA}

  # reset
  xtest::onexit::lan

  # test variables
  local out

  # src_route_100 contains @EXPIRES@
  local src_route_100
  xread_value src_route_100 <<-EOF
	Adding source-route for 2001:db8:100::/56 to wan0\
 via fe80::faaa:dead:beef:8000
	ip '-6' 'route' 'replace' 'default' 'from' '2001:db8:100::/56'\
 'via' 'fe80::faaa:dead:beef:8000' 'dev' 'wan0' 'expires' '@EXPIRES@'\
 'metric' '404'
	ip '-6' 'route' 'replace' 'unreachable' '2001:db8:100::/56'\
 'dev' 'lo' 'expires' '@EXPIRES@' 'metric' '2147483647'
	EOF

  # src_route_200 contains @EXPIRES@
  local src_route_200
  xread_value src_route_200 <<-EOF
	Adding source-route for 2001:db8:200::/56 to wan0\
 via fe80::faaa:dead:beef:8000
	ip '-6' 'route' 'replace' 'default' 'from' '2001:db8:200::/56'\
 'via' 'fe80::faaa:dead:beef:8000' 'dev' 'wan0' 'expires' '@EXPIRES@'\
 'metric' '404'
	ip '-6' 'route' 'replace' 'unreachable' '2001:db8:200::/56'\
 'dev' 'lo' 'expires' '@EXPIRES@' 'metric' '2147483647'
	EOF

  #
  # TEST: 88:99 iaid, 2 lans
  #
  xtest_settime 3060

  local -x new_ip6_prefix="2001:db8:100::/56" new_iaid="88:99" new_rebind=100
  local -x new_max_life=240 new_preferred_life=120 new_life_starts=3000

  xcat > "$wconf" <<-EOF
  	WAN_LAN_INTFS="brx br0"
	EOF

  xtest_dhcp_action L2 REBIND6 "brx br0 - 88:99"
  xread_value out <<-EOF
	Prefix REBIND6 on wan0: 2001:db8:100::/56
	Changing 2001:db8:100::32fb:93c5:6555:845a/63 on br0
	ip '-6' 'addr' 'change' '2001:db8:100::32fb:93c5:6555:845a/63'\
 'dev' 'br0' 'valid_lft' '180' 'preferred_lft' '60'
	${src_route_100//@EXPIRES@/180}
	${xtest_dhcpmon/@TIMEOUT@/160}
	radvd-trigger
	EOF
  ftest L2f "$out" "adds address"
  xread_value out <<-EOF
	inet6:2001:db8:100::32fb:93c5:6555:845a/63
	site6:0/63
	valid-life:240
	pref-life:120
	life-start:3000
	iaid:8899
	dad-state:ok
	EOF
  shtest::check_file L2i "$state1" "$out" "creates br0 88:99 state file"
  xread_value out <<-EOF
	inet6:2001:db8:100:2::/64
	site6:2/64
	valid-life:240
	pref-life:120
	life-start:3000
	iaid:8899
	EOF
  shtest::check_file L2m "$state5" "$out" "creates brx 88:99 state file (pfx)"
  xread_value out <<-EOF
	valid-life:240
	pref-life:120
	life-start:3000
	prefix6:2001:db8:100::/56
	iaid:8899
	rebind:100
	EOF
  shtest::check_file L2p "$pstate1" "$out" "creates 88:99 prefix state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3060
	EOF
  shtest::check_file L2c "$connstate2" "$out" "updates cstate"

  #
  # TEST: 11:22 iaid, same 2 lans
  #
  new_ip6_prefix="2001:db8:200::/56" new_iaid="11:22" new_rebind=180
  new_max_life=320 new_preferred_life=240 new_life_starts=3050

  xtest_dhcp_action L3 REBIND6 "brx br0 - 11:22"
  xread_value out <<-EOF
	Prefix REBIND6 on wan0: 2001:db8:200::/56
	Changing 2001:db8:200::32fb:93c5:6555:845a/63 on br0
	ip '-6' 'addr' 'change' '2001:db8:200::32fb:93c5:6555:845a/63'\
 'dev' 'br0' 'valid_lft' '310' 'preferred_lft' '230'
	${src_route_100//@EXPIRES@/180}
	${src_route_200//@EXPIRES@/310}
	${xtest_dhcpmon/@TIMEOUT@/160}
	radvd-trigger
	EOF
  ftest L3f "$out" "adds address"
  xread_value out <<-EOF
	inet6:2001:db8:200::32fb:93c5:6555:845a/63
	site6:0/63
	valid-life:320
	pref-life:240
	life-start:3050
	iaid:1122
	dad-state:ok
	EOF
  shtest::check_file L3j "$state2" "$out" "creates br0 11:22 state file"
  xread_value out <<-EOF
	inet6:2001:db8:200:2::/64
	site6:2/64
	valid-life:320
	pref-life:240
	life-start:3050
	iaid:1122
	EOF
  shtest::check_file L3n "$state6" "$out" "creates brx 11:22 state file (pfx)"
  xread_value out <<-EOF
	valid-life:320
	pref-life:240
	life-start:3050
	prefix6:2001:db8:200::/56
	iaid:1122
	rebind:180
	EOF
  shtest::check_file L3p "$pstate2" "$out" "creates 11:22 prefix state file"

  #
  # TEST: 11:22 reverse lan order
  #       swap br1 for br0
  #       check existing assignments are kept
  #       disable source-route
  #
  xcat > "$wconf" <<-EOF
	WAN_LAN_INTFS="brx br1"
	WAN_SADR_DISABLE=1
	EOF
  new_ip6_prefix="2001:db8:200::/56" new_iaid="11:22"  new_rebind=180
  new_max_life=320 new_preferred_life=120 new_life_starts=3055

  xtest_dhcp_action L4 REBIND6 "brx br1 - no-sadr"
  xread_value out <<-EOF
	Prefix REBIND6 on wan0: 2001:db8:200::/56
	Adding 2001:db8:200::32fb:93c5:555:1/64 to br1
	ip '-6' 'addr' 'replace' '2001:db8:200::32fb:93c5:555:1/64'\
 'dev' 'br1' 'valid_lft' '315' 'preferred_lft' '115'
	Removing home.example.test AAAA
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete home.example.test AAAA
	send
	2001:db8:100::32fb:93c5:6555:845a/63 on br0 deprecated:\
 Removed from wan0 WAN_LAN_INTFS
	Changing 2001:db8:100::32fb:93c5:6555:845a/63 on br0
	ip '-6' 'addr' 'change' '2001:db8:100::32fb:93c5:6555:845a/63'\
 'dev' 'br0' 'valid_lft' '10' 'preferred_lft' '0'
	2001:db8:200::32fb:93c5:6555:845a/63 on br0 deprecated:\
 Removed from wan0 WAN_LAN_INTFS
	Changing 2001:db8:200::32fb:93c5:6555:845a/63 on br0
	ip '-6' 'addr' 'change' '2001:db8:200::32fb:93c5:6555:845a/63'\
 'dev' 'br0' 'valid_lft' '10' 'preferred_lft' '0'
	${xtest_dhcpmon/@TIMEOUT@/160}
	radvd-trigger
	EOF
  ftest L4f "$out" "depr address, no routes, removes DNS"
  xread_value out <<-EOF
	inet6:2001:db8:100::32fb:93c5:6555:845a/63
	site6:0/63
	valid-life:10
	pref-life:0
	life-start:3060
	iaid:8899
	dad-state:ok
	EOF
  shtest::check_file L4i "$state1" "$out" "releases br0 88:99 state file"
  xread_value out <<-EOF
	inet6:2001:db8:200::32fb:93c5:6555:845a/63
	site6:0/63
	valid-life:10
	pref-life:0
	life-start:3060
	iaid:1122
	dad-state:ok
	EOF
  shtest::check_file L4j "$state2" "$out" "releases br0 11:22 state file"
  xread_value out <<-EOF
	inet6:2001:db8:200::32fb:93c5:555:1/64
	site6:0/64
	valid-life:320
	pref-life:120
	life-start:3055
	iaid:1122
	EOF
  shtest::check_file L4l "$state4" "$out" "creates br1 11:22 state file"
  xread_value out <<-EOF
	inet6:2001:db8:200:2::/64
	site6:2/64
	valid-life:320
	pref-life:120
	life-start:3055
	iaid:1122
	EOF
  shtest::check_file L4n "$state6" "$out" "honors brx 11:22 assignment (pfx)"
  xread_value out <<-EOF
	valid-life:320
	pref-life:120
	life-start:3055
	prefix6:2001:db8:200::/56
	iaid:1122
	rebind:180
	EOF
  shtest::check_file L4p "$pstate2" "$out" "updates 11:22 prefix state file"
  [[ -e $dstate1 ]]
  xtest L4d f "removes br1 ddns state file"

  # reset
  xtest::onexit::lan

  #
  # TEST: 11:22, 2 lans
  #       infinite life
  #       route-metric
  #

  xtest_settime 5000

  new_ip6_prefix="2001:db8:200::/56" new_iaid="11:22" new_rebind=7200
  new_preferred_life=4294967295 new_max_life=4294967295 new_life_starts=4000

  xcat > "$wconf" <<-EOF
	WAN_LAN_INTFS="br1 br0"
	WAN_SADR_METRIC=100
	EOF

  local alt_src_route_200=${src_route_200/404/100}

  xtest_dhcp_action L5 REBIND6 "br1 br0 - inf life, sadr metric"
  xread_value out <<-EOF
	Prefix REBIND6 on wan0: 2001:db8:200::/56
	Changing 2001:db8:200:2:32fb:93c5:555:1/64 on br1
	ip '-6' 'addr' 'change' '2001:db8:200:2:32fb:93c5:555:1/64'\
 'dev' 'br1' 'valid_lft' 'forever' 'preferred_lft' 'forever'
	Changing 2001:db8:200::32fb:93c5:6555:845a/63 on br0
	ip '-6' 'addr' 'change' '2001:db8:200::32fb:93c5:6555:845a/63'\
 'dev' 'br0' 'valid_lft' 'forever' 'preferred_lft' 'forever'
	${alt_src_route_200//"'expires' '@EXPIRES@' "/}
	Setting home.example.test AAAA to 2001:db8:200:2:32fb:93c5:555:1
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete home.example.test AAAA
	update add home.example.test 600 AAAA 2001:db8:200:2:32fb:93c5:555:1
	send
	${xtest_dhcpmon/@TIMEOUT@/6320}
	radvd-trigger
	EOF
  ftest L5f "${out}" "adds address/routes w/ metric, updates DNS"
  [[ -e "$state1" ]]
  xtest L5i f "br0 88:99 state file should not exist"
  [[ -e "$state2" ]]
  xread_value out <<-EOF
	inet6:2001:db8:200::32fb:93c5:6555:845a/63
	site6:0/63
	valid-life:4294967295
	pref-life:4294967295
	life-start:4000
	iaid:1122
	dad-state:ok
	EOF
  shtest::check_file L5j "$state2" "$out" "creates br0 11:22 state file"
  [[ -e "$state3" ]]
  xtest L5k f "br1 88:99 state file should not exist"
  xread_value out <<-EOF
	inet6:2001:db8:200:2:32fb:93c5:555:1/64
	site6:2/64
	valid-life:4294967295
	pref-life:4294967295
	life-start:4000
	iaid:1122
	dad-state:ok
	EOF
  shtest::check_file L5l "$state4" "$out" "creates br1 11:22 state file"
  xread_value out <<-EOF
	valid-life:4294967295
	pref-life:4294967295
	life-start:4000
	prefix6:2001:db8:200::/56
	iaid:1122
	rebind:7200
	EOF
  shtest::check_file L5p "$pstate2" "$out" "creates 11:22 prefix state file"
  shtest::check_file \
    L5d "$dstate1" "2001:db8:200:2:32fb:93c5:555:1" \
    "create br1 ddns state file"
  xread_value out <<-EOF
	$init_cstate
	boot:5000
	EOF
  shtest::check_file L5c "$connstate2" "$out" "updates cstate"

  # reset
  xtest::onexit::lan
  unset new_ip6_prefix new_iaid new_rebind
  unset new_max_life new_preferred_life new_life_starts

  #
  # TEST: DEPREF 88:99, 3 lans
  #
  local -x cur_ip6_prefix="2001:db8:100::/56" cur_iaid="88:99" cur_rebind=1200
  local -x cur_max_life=180 cur_life_starts=5000

  # no prefix assigned on br0 88:99
  # prefix on br1 88:99
  xcat > "$state3" <<-EOF
	inet6:2001:db8:100:2:32fb:93c5:555:1/64
	site6:2/64
	valid-life:320
	pref-life:120
	life-start:4010
	iaid:8899
	EOF
  # prefix on brx 88:99 but brx was down
  xcat > "$state5" <<-EOF
	inet6:2001:db8:100:fe::/63
	site6:254/64
	valid-life:320
	pref-life:120
	life-start:4010
	iaid:8899
	EOF

  xcat > "$wconf" <<-EOF
	WAN_LAN_INTFS="br0 brx br1"
	EOF

  xtest_dhcp_action L11 DEPREF6 "br0 brx br1 - 88:99"
  xread_value out <<-EOF
	Prefix DEPREF6 on wan0: 2001:db8:100::/56
	Changing 2001:db8:100::32fb:93c5:6555:845a/63 on br0
	ip '-6' 'addr' 'change' '2001:db8:100::32fb:93c5:6555:845a/63'\
 'dev' 'br0' 'valid_lft' '180' 'preferred_lft' '0'
	Changing 2001:db8:100:2:32fb:93c5:555:1/64 on br1
	ip '-6' 'addr' 'change' '2001:db8:100:2:32fb:93c5:555:1/64'\
 'dev' 'br1' 'valid_lft' '180' 'preferred_lft' '0'
	${src_route_100//@EXPIRES@/180}
	Removing home.example.test AAAA
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete home.example.test AAAA
	send
	${xtest_dhcpmon/@TIMEOUT@/1320}
	radvd-trigger
	EOF
  ftest L11f "$out" "sets address lifetime 0, removes from dns"
  xread_value out <<-EOF
	inet6:2001:db8:100::32fb:93c5:6555:845a/63
	site6:0/63
	valid-life:180
	pref-life:0
	life-start:5000
	iaid:8899
	dad-state:ok
	EOF
  shtest::check_file L11i "$state1" "$out" "creates br0 88:99 state file"
  xread_value out <<-EOF
	inet6:2001:db8:100:2:32fb:93c5:555:1/64
	site6:2/64
	valid-life:180
	pref-life:0
	life-start:5000
	iaid:8899
	dad-state:ok
	EOF
  shtest::check_file L11k "$state3" "$out" "updates br1 88:99 state file"
  xread_value out <<-EOF
	inet6:2001:db8:100:fe::/63
	site6:254/64
	valid-life:180
	pref-life:0
	life-start:5000
	iaid:8899
	EOF
  shtest::check_file L11m "$state5" "$out" "updates brx 88:99 state file (pfx)"
  xread_value out <<-EOF
	valid-life:180
	pref-life:0
	life-start:5000
	prefix6:2001:db8:100::/56
	iaid:8899
	rebind:1200
	EOF
  shtest::check_file L11p "$pstate1" "$out" "creates 88:99 prefix state file"
  [[ -e $dstate1 ]]
  xtest L11d f "removes br1 ddns state file"

  unset cur_ip6_prefix cur_iaid cur_rebind cur_max_life cur_life_starts

  #
  # TEST: RELEASE 88:99, 3 lans
  #

  # create one 11:22 assignment for ddns
  xcat > "$state4" out <<-EOF
	inet6:2001:db8:200:2:32fb:93c5:555:1/64
	site6:2/64
	valid-life:4294967295
	pref-life:4294967295
	life-start:4000
	iaid:1122
	dad-state:ok
	EOF

  local -x old_ip6_prefix="2001:db8:100::/56" old_iaid="88:99"

  xtest_dhcp_action L21 RELEASE6 "br0 brx br1 - 88:99"
  xread_value out <<-EOF
	Prefix RELEASE6 on wan0: 2001:db8:100::/56
	2001:db8:100::32fb:93c5:6555:845a/63 on br0 deprecated:\
 DHCP prefix delegation 2001:db8:100::/56 released
	Changing 2001:db8:100::32fb:93c5:6555:845a/63 on br0
	ip '-6' 'addr' 'change' '2001:db8:100::32fb:93c5:6555:845a/63'\
 'dev' 'br0' 'valid_lft' '10' 'preferred_lft' '0'
	2001:db8:100:2:32fb:93c5:555:1/64 on br1 deprecated:\
 DHCP prefix delegation 2001:db8:100::/56 released
	Changing 2001:db8:100:2:32fb:93c5:555:1/64 on br1
	ip '-6' 'addr' 'change' '2001:db8:100:2:32fb:93c5:555:1/64'\
 'dev' 'br1' 'valid_lft' '10' 'preferred_lft' '0'
	ip '-6' 'route' 'del' 'default' 'from' '2001:db8:100::/56' 'dev' 'wan0'
	ip '-6' 'route' 'del' 'unreachable' '2001:db8:100::/56' 'dev' 'lo'
	Setting home.example.test AAAA to 2001:db8:200:2:32fb:93c5:555:1
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete home.example.test AAAA
	update add home.example.test 600 AAAA 2001:db8:200:2:32fb:93c5:555:1
	send
	radvd-trigger
	EOF
  ftest L21f "$out" "removes address"
  xread_value out <<-EOF
	inet6:2001:db8:100::32fb:93c5:6555:845a/63
	site6:0/63
	valid-life:10
	pref-life:0
	life-start:5000
	iaid:8899
	dad-state:ok
	EOF
  shtest::check_file L21i "$state1" "$out" "updates br0 88:99 state file"
  xread_value out <<-EOF
	inet6:2001:db8:100:2:32fb:93c5:555:1/64
	site6:2/64
	valid-life:10
	pref-life:0
	life-start:5000
	iaid:8899
	dad-state:ok
	EOF
  shtest::check_file L21k "$state3" "$out" "updates br1 88:99 state file"
  [[ -e $state5 ]]
  xtest L21m f "removes brx 88:99 state file"
  [[ -e $pstate1 ]]
  xtest L21p f "removes 88:99 prefix state file"
  shtest::check_file \
    L21d "$dstate1" "2001:db8:200:2:32fb:93c5:555:1" \
    "updates br1 ddns state file"

  #
  # TEST: EXPIRE 11:22, 3 lans
  #

  # create prefix file for route tests
  xcat > "$pstate2" <<-EOF
	valid-life:320
	pref-life:120
	life-start:3055
	prefix6:2001:db8:200::/56
	iaid:1122
	rebind:180
	EOF

  old_ip6_prefix="2001:db8:200::/56" old_iaid="11:22"

  xtest_dhcp_action L31 EXPIRE6 "br0 brx br1 - 11:22"
  xread_value out <<-EOF
	Prefix EXPIRE6 on wan0: 2001:db8:200::/56
	2001:db8:200:2:32fb:93c5:555:1/64 on br1 expired
	Removing 2001:db8:200:2:32fb:93c5:555:1/64 from br1
	ip '-6' 'addr' 'del' '2001:db8:200:2:32fb:93c5:555:1/64' 'dev' 'br1'
	ip '-6' 'route' 'del' 'default' 'from' '2001:db8:200::/56' 'dev' 'wan0'
	ip '-6' 'route' 'del' 'unreachable' '2001:db8:200::/56' 'dev' 'lo'
	Removing home.example.test AAAA
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete home.example.test AAAA
	send
	radvd-trigger
	EOF
  ftest L31f "$out" "removes address and dns"
  [[ -e $state4 ]]
  xtest L31k f "removes br1 11:22 state file"
  [[ -e $pstate2 ]]
  xtest L31q f "removes 11:22 prefix state file"
  [[ -e $dstate1 ]]
  xtest L31d f "removes br1 ddns state file"

  # cleanup
  ipv6_lan_clear_config
  ipv6_wan_clear_config
  nmddns_reset_config
  xtest::onexit::lan
}

xtest::onexit::lan_dad() {
  [[ -d $RUNDIR ]] || return 0
  command -p rm -f "$RUNDIR/"*"-dhc"
}

xtest::group3::lan_dad() {

  shtest::title "dhclient Prefix DAD Failure Tests (lan_dad group)"

  echo >"$connstate2" "conn-uuid:${isp_uuid}"

  xtest_check_statevars F0 LAN_STATE_PAT WAN_PFXSTATE_PAT

  # rename for easy cleanup
  local LAN_STATE_PAT="${LAN_STATE_PAT}-dhc"
  local WAN_PFXSTATE_PAT="${WAN_PFXSTATE_PAT}-dhc"
  local WAN_CONFIG_PAT="$RUNDIR/ipv6-prefix-@WAN@.conf-dhc"

  local state1 pstate1 hash1
  nmg::hash hash1 "2001:db8:5::/56"; hash1+="+aabb-wan0"
  state1=${LAN_STATE_PAT/@LAN@-from-@ID@-@WAN@/eth3-from-$hash1}
  pstate1=${WAN_PFXSTATE_PAT/@ID@-@WAN@/$hash1}

  # override for tests
  local wconf=${WAN_CONFIG_PAT/@WAN@/wan0}

  # test variables
  local out

  #
  # TEST: prefix assignment that fails DAD on LAN
  #       replacement address created
  #

  xtest_settime 6050

  local -x new_ip6_prefix="2001:db8:5::/56" new_iaid="aa:bb" new_rebind=600
  local -x new_preferred_life=7200 new_max_life=3600 new_life_starts=6000

  xcat > "$wconf" <<-EOF
	WAN_LAN_INTFS="eth3"
	EOF

  xtest_dhcp_action F1 REBIND6 "eth3 - aa:bb LAN DAD failure"
  xread_value out <<-EOF
	Prefix REBIND6 on wan0: 2001:db8:5::/56
	Changing 2001:db8:5::1/64 on eth3
	ip '-6' 'addr' 'change' '2001:db8:5::1/64' 'dev' 'eth3'\
 'valid_lft' '3550' 'preferred_lft' '7150'
	ERR: Address 2001:db8:5::1/64 has conflict on eth3\
 (trying new address)
	Adding 2001:db8:5::0/64 to eth3
	ip '-6' 'addr' 'replace' '2001:db8:5::0/64' 'dev' 'eth3'\
 'valid_lft' '3550' 'preferred_lft' '7150'
	Adding source-route for 2001:db8:5::/56 to wan0 via\
 fe80::faaa:dead:beef:8000
	ip '-6' 'route' 'replace' 'default' 'from' '2001:db8:5::/56'\
 'via' 'fe80::faaa:dead:beef:8000' 'dev' 'wan0' 'expires' '3550' 'metric' '404'
	ip '-6' 'route' 'replace' 'unreachable' '2001:db8:5::/56'\
 'dev' 'lo' 'expires' '3550' 'metric' '2147483647'
	${xtest_dhcpmon/@TIMEOUT@/670}
	radvd-trigger
	EOF
  ftest F1f "$out" "creates alt addr, adds ip/routes"
  xread_value out <<-EOF
	inet6:2001:db8:5::1/64
	site6:0/64
	valid-life:3600
	pref-life:7200
	life-start:6000
	iaid:aabb
	EOF
  shtest::check_file F1s "$state1" "$out" "creates eth3 aa:bb state file"
  xread_value out <<-EOF
	valid-life:3600
	pref-life:7200
	life-start:6000
	prefix6:2001:db8:5::/56
	iaid:aabb
	rebind:600
	EOF
  shtest::check_file F1p "$pstate1" "$out" "creates aa:bb prefix state file"

  ipv6_lan_clear_config
  ipv6_wan_clear_config
  xtest::onexit::lan_dad
}

xtest::onexit::wan() {
  [[ -d $RUNDIR ]] || return 0
  command -p rm -f "$RUNDIR/"*"-dhc"
}

xtest::group3::wan() {

  shtest::title "WAN dhclient with method ignore (wan group)"

  local -x NMCLI_MOCK_FORCE_ipv6_method=ignore

  # init state
  local init_cstate
  xread_value init_cstate <<-EOF
	conn-uuid:${isp_uuid}
	method:ignore
	never-default:no
	ignore-auto-dns:no
	client:started
	EOF
  echo >"$connstate2" "$init_cstate"
  xtest_init_sysctls dhclient

  xtest_check_statevars W0 WAN_ADDR_STATE_PAT

  # rename for easy cleanup
  local WAN_ADDR_STATE_PAT="${WAN_ADDR_STATE_PAT}-dhc"
  local WAN_CONFIG_PAT="$RUNDIR/ipv6-prefix-@WAN@.conf-dhc"

  # override for tests
  local wconf=${WAN_CONFIG_PAT/@WAN@/wan0}

  # hashs used for generated filenames
  local hash1 hash2 hash3
  nmg::hash hash1 "2001:db8:800::2/128"; hash1+="+abc"
  nmg::hash hash2 "2001:db8:aaa::1/128"; hash2+="+cde"
  nmg::hash hash3 "2001:db8:aaa::2/128"; hash3+="+cde"

  local wstate state1 state2 state3
  wstate=${WAN_ADDR_STATE_PAT/@WAN@/wan0}
  state1=${wstate/@ID@/$hash1}
  state2=${wstate/@ID@/$hash2}
  state3=${wstate/@ID@/$hash3}

  # test variables
  local out var

  # reset
  xtest::onexit::wan

  #
  # TEST: check_nm up to init connstate
  #
  printf "" > "$wconf"

  xwrap2 "up" ipv6_check_nm up
  xret W1 t "returns true"
  ftest W1f "" "does not log"
  [[ $NMCLI ]]
  xtest W1a t "NMCLI is set"
  [[ $CONNECTION_UUID == "$isp_uuid" ]]
  xtest W1u t "CONNECTION_UUID correctly set"
  [[ $DCDFLAG == 0 ]]
  xtest W1d t "DCDFLAG=0"
  [[ $NM_CONFIG ]]
  xtest W1n t "NM_CONFIG is set"

  # DCDFLAG not set by dhclient
  DCDFLAG=''

  #
  # TEST: existing address
  #
  xtest_settime 3500

  local -x new_ip6_address='2001:db8:800::2' new_ip6_prefixlen=128
  local -x new_iaid='a:b:c' new_rebind=600
  local -x new_max_life=4100 new_preferred_life=2100 new_life_starts=3400

  xtest_dhcp_action W11 REBIND6 "existing addr - a:b:c"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:800::2
	Changing 2001:db8:800::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:800::2/128' 'dev' 'wan0'\
 'valid_lft' '4000' 'preferred_lft' '2000'
	${xtest_dhcpmon/@TIMEOUT@/620}
	EOF
  ftest W11f "$out" "updates addr"
  xread_value out <<-EOF
	inet6:2001:db8:800::2/128
	iaid:abc
	valid-life:4100
	pref-life:2100
	life-start:3400
	rebind:600
	dad-state:ok
	EOF
  shtest::check_file W11s "$state1" "$out" "creates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3500
	EOF
  shtest::check_file W11c "$connstate2" "$out" "updates cstate"

  #
  # TEST: existing address updated lifetimes
  #
  xtest_settime 3550

  new_max_life=3600 new_preferred_life=1800 new_life_starts=3500

  xtest_dhcp_action W12 REBIND6 "update lifetimes - a:b:c"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:800::2
	Changing 2001:db8:800::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:800::2/128' 'dev' 'wan0'\
 'valid_lft' '3550' 'preferred_lft' '1750'
	${xtest_dhcpmon/@TIMEOUT@/670}
	EOF
  ftest W12f "$out" "updates lifetimes"
  xread_value out <<-EOF
	inet6:2001:db8:800::2/128
	iaid:abc
	valid-life:3600
	pref-life:1800
	life-start:3500
	rebind:600
	dad-state:ok
	EOF
  shtest::check_file W12s "$state1" "$out" "updates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3550
	EOF
  shtest::check_file W12c "$connstate2" "$out" "updates cstate"

  #
  # TEST: new address fails DAD
  #
  new_ip6_address='2001:db8:aaa::2' new_ip6_prefixlen=128 new_iaid='c:d:e'

  shtest::prefix "REBIND6 - addr DAD fail"
  var=0
  (
    # shellcheck disable=SC2030,SC2031
    local -x reason=REBIND6
    xwrap ipv6_dhcp_action
    echo "not reached"
  ) || var=$?
  vtest W13 3 ": exits 3"
  shtest::prefix " - "
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::2
	Changing 2001:db8:aaa::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::2/128' 'dev' 'wan0'\
 'valid_lft' '3550' 'preferred_lft' '1750'
	Address 2001:db8:aaa::2/128 has conflict on wan0
	Removing 2001:db8:aaa::2/128 from wan0
	ip '-6' 'addr' 'del' '2001:db8:aaa::2/128' 'dev' 'wan0'
	EOF
  ftest W13f "${out}" "adds, then removes new addr"
  [[ -e ${state3} ]]
  shtest::check_result W13s f "does not create new state"

  #
  # TEST: new address with dhcp dns
  #       1 dns routed
  #
  new_ip6_address='2001:db8:aaa::1' new_ip6_prefixlen=128
  new_iaid='c:d:e' new_rebind=0
  new_max_life=600 new_preferred_life=300 new_life_starts=3500
  local -x new_dhcp6_name_servers='2001:db8:aaa::100 2001:db8:222::1'
  local -x new_dhcp6_domain_search='dns-search.lan dns-search2.lan'

  xtest_dhcp_action W14 REBIND6 "new addr/dns - c:d:e, 1 dns routed"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::1
	Changing 2001:db8:aaa::1/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::1/128' 'dev' 'wan0'\
 'valid_lft' '550' 'preferred_lft' '250'
	ip '-6' 'route' 'replace' '2001:db8:222::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	Updating DNS settings on wan0
	resolvectl 'dns' 'wan0' '2001:db8:aaa::100' '2001:db8:222::1'
	resolvectl 'domain' 'wan0' 'dns-search.lan' 'dns-search2.lan'
	resolvectl 'default-route' 'wan0' 'yes'
	${xtest_dhcpmon/@TIMEOUT@/320}
	EOF
  ftest W14f "${out}" "adds 1 addr, 1 dns route, updates resolver"
  xread_value out <<-EOF
	inet6:2001:db8:aaa::1/128
	iaid:cde
	valid-life:600
	pref-life:300
	life-start:3500
	rebind:0
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:dns-search.lan,dns-search2.lan
	dad-state:ok
	EOF
  shtest::check_file W14s "$state2" "$out" "creates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3550
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:dns-search.lan,dns-search2.lan
	EOF
  shtest::check_file W14c "$connstate2" "$out" "updates cstate dns"

  #
  # Just a test to confirm dev reapply works with new settings
  #
  xtest_nm_action W14r reapply wan0 "succeeds"
  xread_value out <<-EOF
	Changing 2001:db8:aaa::1/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::1/128' 'dev' 'wan0'\
 'valid_lft' '550' 'preferred_lft' '250'
	Changing 2001:db8:800::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:800::2/128' 'dev' 'wan0'\
 'valid_lft' '3550' 'preferred_lft' '1750'
	ip '-6' 'route' 'replace' '2001:db8:222::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	EOF
  ftest W14x "${out}" "adds 2 addrs, 1 dns route"

  #
  # TEST: new address with dhcp+static dns
  #       2 dns routed
  #
  local -x new_dhcp6_name_servers='2001:db8:333::1'
  local -x new_dhcp6_domain_search='new-search.lan'

  xcat > "$wconf" <<-EOF
	WAN_STATIC_DNS6="2001:db8:444::1,2001:db8:aaa::200"
	WAN_STATIC_DNS6_SEARCH="static1.lan,static2.lan"
	EOF

  xtest_dhcp_action W15 REBIND6 "dhcp+static dns"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::1
	Changing 2001:db8:aaa::1/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::1/128' 'dev' 'wan0'\
 'valid_lft' '550' 'preferred_lft' '250'
	ip '-6' 'route' 'replace' '2001:db8:444::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	ip '-6' 'route' 'replace' '2001:db8:333::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	Updating DNS settings on wan0
	resolvectl 'dns' 'wan0' '2001:db8:444::1' '2001:db8:aaa::200'\
 '2001:db8:333::1'
	resolvectl 'domain' 'wan0' 'static1.lan' 'static2.lan' 'new-search.lan'
	resolvectl 'default-route' 'wan0' 'yes'
	${xtest_dhcpmon/@TIMEOUT@/320}
	EOF
  ftest W15f "${out}" "adds static/dhcp addrs/dns, 2 dns, routes, updates resolver"
  xread_value out <<-EOF
	inet6:2001:db8:aaa::1/128
	iaid:cde
	valid-life:600
	pref-life:300
	life-start:3500
	rebind:0
	dns:2001:db8:333::1
	dns-search:new-search.lan
	dad-state:ok
	EOF
  shtest::check_file W15s "$state2" "$out" "updates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3550
	dns:2001:db8:444::1,2001:db8:aaa::200,2001:db8:333::1
	dns-search:static1.lan,static2.lan,new-search.lan
	EOF
  shtest::check_file W15c "$connstate2" "$out" "updates cstate dns"

  #
  # Just a test to confirm dev reapply works with new settings
  #
  xtest_nm_action W15r reapply wan0 "succeeds"
  xread_value out <<-EOF
	Changing 2001:db8:aaa::1/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::1/128' 'dev' 'wan0'\
 'valid_lft' '550' 'preferred_lft' '250'
	Changing 2001:db8:800::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:800::2/128' 'dev' 'wan0'\
 'valid_lft' '3550' 'preferred_lft' '1750'
	ip '-6' 'route' 'replace' '2001:db8:444::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	ip '-6' 'route' 'replace' '2001:db8:333::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	EOF
  ftest W15x "${out}" "adds 2 addrs, 2 dns routes"

  #
  # TEST: new address with dhcp+static dns and ignore-auto-dns
  #       1 dns routed
  #       use resolvconf for resolver config
  #
  local -x NMCLI_MOCK_FORCE_ipv6_ignore_auto_dns=yes
  # disable resolvectl to use resolvconf
  local RESOLVECTL=''

  xtest_settime 3810
  new_rebind=800
  new_max_life=1200 new_preferred_life=1000 new_life_starts=3800

  xtest_dhcp_action W16 REBIND6 "ignore-auto-dns=yes"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::1
	Changing 2001:db8:aaa::1/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::1/128' 'dev' 'wan0'\
 'valid_lft' '1190' 'preferred_lft' '990'
	${xtest_dhcpmon/@TIMEOUT@/410}
	EOF
  ftest W16f "${out}" "updates addrs, ignores dns change"
  xread_value out <<-EOF
	inet6:2001:db8:aaa::1/128
	iaid:cde
	valid-life:1200
	pref-life:1000
	life-start:3800
	rebind:800
	dns:2001:db8:333::1
	dns-search:new-search.lan
	dad-state:ok
	EOF
  shtest::check_file W16s "$state2" "$out" "updates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3810
	dns:2001:db8:444::1,2001:db8:aaa::200,2001:db8:333::1
	dns-search:static1.lan,static2.lan,new-search.lan
	EOF
  shtest::check_file W16c "$connstate2" "$out" "updates cstate, dns unchanged"

  #
  # dev reapply updates no-auto-dns...
  #
  xtest_nm_action W16r reapply wan0 "applies ignore-auto-dns"
  xread_value out <<-EOF
	Changing 2001:db8:aaa::1/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::1/128' 'dev' 'wan0'\
 'valid_lft' '1190' 'preferred_lft' '990'
	Changing 2001:db8:800::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:800::2/128' 'dev' 'wan0'\
 'valid_lft' '3290' 'preferred_lft' '1490'
	ip '-6' 'route' 'replace' '2001:db8:444::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	Updating DNS settings on wan0
	resolvconf '-f' '-a' 'wan0'
	nameserver 2001:db8:444::1
	nameserver 2001:db8:aaa::200
	search static1.lan static2.lan
	EOF
  ftest W16x "$out" "adds 2 addrs, 1 dns route, updates resolver"
  xread_value var <<-EOF
	${init_cstate/ignore-auto-dns:no/ignore-auto-dns:yes}
	boot:3810
	dns:2001:db8:444::1,2001:db8:aaa::200
	dns-search:static1.lan,static2.lan
	EOF
  shtest::check_file W16y "$connstate2" "$var" "updates cstate dns"

  # revert ignore-auto-dns
  unset NMCLI_MOCK_FORCE_ipv6_ignore_auto_dns
  echo "${var/ignore-auto-dns:yes/ignore-auto-dns:no}" >"$connstate2"

  #
  # TEST: new address with dhcp dns, remove static dns, route metric
  #
  local -x NMCLI_MOCK_FORCE_ipv6_route_metric=555

  xtest_settime 3810
  new_rebind=800
  new_dhcp6_name_servers='2001:db8:aaa::100 2001:db8:222::1'
  new_dhcp6_domain_search='new-search.lan dhcp2.lan'

  printf "" > "$wconf"

  xtest_dhcp_action W17 REBIND6 "dhcp dns, route-metric=555"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::1
	Changing 2001:db8:aaa::1/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::1/128' 'dev' 'wan0'\
 'valid_lft' '1190' 'preferred_lft' '990'
	ip '-6' 'route' 'replace' '2001:db8:222::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	Updating DNS settings on wan0
	resolvconf '-f' '-a' 'wan0'
	nameserver 2001:db8:aaa::100
	nameserver 2001:db8:222::1
	search new-search.lan dhcp2.lan
	${xtest_dhcpmon/@TIMEOUT@/410}
	EOF
  ftest W17f "${out}" "adds addrs/dns, 1 dns route ignoring metric"
  xread_value out <<-EOF
	inet6:2001:db8:aaa::1/128
	iaid:cde
	valid-life:1200
	pref-life:1000
	life-start:3800
	rebind:800
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:new-search.lan,dhcp2.lan
	dad-state:ok
	EOF
  shtest::check_file W17s "$state2" "$out" "updates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3810
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:new-search.lan,dhcp2.lan
	EOF
  shtest::check_file W17c "$connstate2" "$out" "updates cstate"

  #
  # Just a test to confirm dev reapply works with new settings
  #
  xtest_settime 3900

  xtest_nm_action W17r reapply wan0 "succeeds"
  xread_value out <<-EOF
	Changing 2001:db8:aaa::1/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:aaa::1/128' 'dev' 'wan0'\
 'valid_lft' '1100' 'preferred_lft' '900'
	Changing 2001:db8:800::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:800::2/128' 'dev' 'wan0'\
 'valid_lft' '3200' 'preferred_lft' '1400'
	ip '-6' 'route' 'replace' '2001:db8:222::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0' 'metric' '555'
	EOF
  ftest W17x "${out}" "adds 1 addr, 1 dns route w/ metric"
  xread_value out <<-EOF
	$init_cstate
	boot:3810
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:new-search.lan,dhcp2.lan
	route-metric:555
	EOF
  shtest::check_file W17y "$connstate2" "$out" "updates cstate metric"

  #
  # TEST: release address
  #
  xtest_settime 4000

  local -x old_ip6_address='2001:db8:800::2' old_ip6_prefixlen=128
  local -x old_iaid='a:b:c' old_rebind=600
  local -x old_max_life=3600 old_preferred_life=1800 old_life_starts=3500
  local -x old_dhcp6_name_servers='2001:db8:aaa::100 2001:db8:222::1'
  local -x old_dhcp6_domain_search='new-search.lan dhcp2.lan'

  xtest_dhcp_action W20 RELEASE6 "release a:b:c addr"
  xread_value out <<-EOF
	RELEASE6 on wan0: 2001:db8:800::2
	EOF
  ftest W20f "${out}" "removes addr"
  [[ -e $state1 ]]
  xtest W20j f "removes a:b:c state"
  xread_value out <<-EOF
	$init_cstate
	boot:3810
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:new-search.lan,dhcp2.lan
	route-metric:555
	EOF
  shtest::check_file W20c "$connstate2" "$out" "cstate unchanged"

  #
  # TEST: expire address
  #
  old_ip6_address='2001:db8:aaa::1' old_ip6_prefixlen=128
  old_iaid='c:d:e' old_rebind=800
  old_max_life=600 old_preferred_life=300 old_life_starts=3500
  old_dhcp6_name_servers='2001:db8:aaa::100 2001:db8:222::1'
  old_dhcp6_domain_search='new-search.lan dhcp2.lan'

  xtest_dhcp_action W30 EXPIRE6 "release c:d:e addr"
  xread_value out <<-EOF
	EXPIRE6 on wan0: 2001:db8:aaa::1
	Updating DNS settings on wan0
	resolvconf '-f' '-d' 'wan0'
	EOF
  ftest W30f "${out}" "removes addr"
  [[ -e $state2 ]]
  xtest W30j f "removes c:d:e state"
  xread_value out <<-EOF
	$init_cstate
	boot:3810
	route-metric:555
	EOF
  shtest::check_file W30c "$connstate2" "$out" "cstate unchanged"

  nmddns_reset_config
  ipv6_wan_clear_config
  xtest_init_sysctls
  xtest::onexit::wan
}

xtest::onexit::wan_depref() {
  [[ -d $RUNDIR ]] || return 0
  command -p rm -f "$RUNDIR/"*"-dhc"
}

xtest::group3::wan_depref() {

  shtest::title "WAN dhclient depref (wan_depref group)"

  # init state
  local init_cstate
  xread_value init_cstate <<-EOF
	conn-uuid:${isp_uuid}
	method:manual
	never-default:no
	ignore-auto-dns:no
	link-local:fe80::0a44:e1f0:d471:03b5/64
	client:started
	EOF
  echo >"$connstate2" "$init_cstate"
  xtest_init_sysctls dhclient

  xtest_check_statevars E0 WAN_ADDR_STATE_PAT

  # rename for easy cleanup
  local WAN_ADDR_STATE_PAT="${WAN_ADDR_STATE_PAT}-dhc"
  local WAN_CONFIG_PAT="$RUNDIR/ipv6-prefix-@WAN@.conf-dhc"
  local -x NMCLI_MOCK_SAVE="$RUNDIR/nmcli-save-dhc"

  # override for tests
  local wconf=${WAN_CONFIG_PAT/@WAN@/wan0}

  # hashs used for generated filenames
  local hash1
  nmg::hash hash1 "2001:db8:800::2/128"; hash1+="+123"

  local wstate state1
  wstate=${WAN_ADDR_STATE_PAT/@WAN@/wan0}
  state1=${wstate/@ID@/$hash1}

  # test variables
  local out var

  # reset
  xtest::onexit::wan_depref

  #
  # TEST: deprecate address not in NM
  #
  printf "" > "$wconf"

  xtest_settime 3100

  # override current address on connection
  local -x NMCLI_MOCK_FORCE_ipv6_addresses='2001:db8:100::2/64'

  local -x cur_ip6_address='2001:db8:800::2' cur_ip6_prefixlen=128
  local -x cur_iaid='1:2:3' cur_rebind=600
  local -x cur_max_life=1800 new_preferred_life=100 cur_life_starts=3000

  xtest_dhcp_action E1 DEPREF6 "depref new - 1:2:3 method=manual"
  xread_value out <<-EOF
	DEPREF6 on wan0: 2001:db8:800::2
	nmcli 'conn' 'modify' '--temporary' '${isp_uuid}'\
 'ipv6.method' 'manual' 'ipv6.addresses' '2001:db8:800::2/128'\
 'ipv6.dns' '' 'ipv6.dns-search' ''
	nmcli 'device' 'reapply' 'wan0'
	${xtest_dhcpmon/@TIMEOUT@/620}
	EOF
  ftest E1f "$out" "adds addr in NM, reapplies"
  xread_value out <<-EOF
	inet6:2001:db8:800::2/128
	iaid:123
	valid-life:1800
	pref-life:0
	life-start:3000
	rebind:600
	dad-state:ok
	EOF
  shtest::check_file E1s "$state1" "$out" "creates state file"
  xread_value var <<-EOF
	$init_cstate
	reapply:yes
	boot:3100
	EOF
  shtest::check_file E1c "$connstate2" "$var" "updates cstate"

  xtest_nm_action E1r reapply wan0 "succeeds"
  ftest E1x "" "no action"
  var=${var/$'\n'reapply:yes/}
  shtest::check_file E1y "$connstate2" "$var" "clears cstate reapply"

  # reset
  xtest::onexit::wan_depref
  unset NMCLI_MOCK_FORCE_ipv6_addresses

  #
  # TEST: deprecate address in NM
  #
  printf "" > "$wconf"

  xtest_dhcp_action E2 DEPREF6 "depref existing"
  xread_value out <<-EOF
	DEPREF6 on wan0: 2001:db8:800::2
	${xtest_dhcpmon/@TIMEOUT@/620}
	EOF
  ftest E2f "$out" "no action"
  xread_value out <<-EOF
	inet6:2001:db8:800::2/128
	iaid:123
	valid-life:1800
	pref-life:0
	life-start:3000
	rebind:600
	dad-state:ok
	EOF
  shtest::check_file E2s "$state1" "$out" "creates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3100
	EOF
  shtest::check_file E2c "$connstate2" "$out" "updates cstate"

  # reset
  xtest::onexit::wan_depref

  #
  # tests that follow are ipv6.method = ignore
  #
  local -x NMCLI_MOCK_FORCE_ipv6_method=ignore
  init_cstate=${init_cstate/method:manual/method:ignore}
  echo >"$connstate2" "$init_cstate"

  #
  # TEST: deprecate address
  #
  printf "" > "$wconf"

  local -x cur_ip6_address='2001:db8:800::2' cur_ip6_prefixlen=128
  local -x cur_iaid='1:2:3' cur_rebind=600
  local -x cur_max_life=1800 new_preferred_life=100 cur_life_starts=3000

  xtest_dhcp_action E11 DEPREF6 "depref addr method=ignore"
  xread_value out <<-EOF
	DEPREF6 on wan0: 2001:db8:800::2
	Changing 2001:db8:800::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:800::2/128' 'dev' 'wan0'\
 'valid_lft' '1700' 'preferred_lft' '0'
	${xtest_dhcpmon/@TIMEOUT@/620}
	EOF
  ftest E11f "$out" "deprefs addr"
  xread_value out <<-EOF
	inet6:2001:db8:800::2/128
	iaid:123
	valid-life:1800
	pref-life:0
	life-start:3000
	rebind:600
	dad-state:ok
	EOF
  shtest::check_file E11s "$state1" "$out" "creates state file"
  xread_value var <<-EOF
	$init_cstate
	boot:3100
	EOF
  shtest::check_file E11c "$connstate2" "$var" "updates cstate"

  #
  # TEST: reapply behavior
  #
  xtest_nm_action E11r reapply wan0 "succeeds"
  xread_value out <<-EOF
	Changing 2001:db8:800::2/128 on wan0
	ip '-6' 'addr' 'change' '2001:db8:800::2/128' 'dev' 'wan0'\
 'valid_lft' '1700' 'preferred_lft' '0'
	EOF
  ftest E11x "$out" "depr address"
  shtest::check_file E11y "$connstate2" "$var" "cstate unchanged"

  nmddns_reset_config
  ipv6_wan_clear_config
  xtest_init_sysctls dhclient
  xtest::onexit::wan_depref
}

xtest::onexit::wan_nm() {
  [[ -d $RUNDIR ]] || return 0
  command -p rm -f "$RUNDIR/"*"-dhc"
}

xtest::group3::wan_nm() {

  # these are the same as wan group but method != ignore
  shtest::title "WAN dhclient with method != ignore (wan_nm group)"

  # init state
  local init_cstate
  xread_value init_cstate <<-EOF
	conn-uuid:${isp_uuid}
	method:manual
	never-default:no
	ignore-auto-dns:no
	client:started
	EOF
  echo >"$connstate2" "$init_cstate"
  xtest_init_sysctls dhclient

  xtest_check_statevars N0 WAN_ADDR_STATE_PAT

  # rename for easy cleanup
  local WAN_ADDR_STATE_PAT="${WAN_ADDR_STATE_PAT}-dhc"
  local WAN_CONFIG_PAT="$RUNDIR/ipv6-prefix-@WAN@.conf-dhc"
  local -x NMCLI_MOCK_SAVE="$RUNDIR/nmcli-save-dhc"

  # override for tests
  local wconf=${WAN_CONFIG_PAT/@WAN@/wan0}

  # hashs used for generated filenames
  local hash1 hash2 hash3
  nmg::hash hash1 "2001:db8:800::2/128"; hash1+="+abc"
  nmg::hash hash2 "2001:db8:aaa::1/128"; hash2+="+cde"
  nmg::hash hash3 "2001:db8:aaa::2/128"; hash3+="+cde"

  # test variables
  local out var

  local wstate state1 state2 state3
  wstate=${WAN_ADDR_STATE_PAT/@WAN@/wan0}
  state1=${wstate/@ID@/$hash1}
  state2=${wstate/@ID@/$hash2}
  state3=${wstate/@ID@/$hash3}

  # reset
  xtest::onexit::wan_nm

  #
  # TEST: check_nm up to init connstate
  #
  printf "" > "$wconf"

  xwrap2 "up" ipv6_check_nm up
  xret N1 t "returns true"
  ftest N1f "" "does not log"
  [[ $NMCLI ]]
  xtest N1a t "NMCLI is set"
  [[ $CONNECTION_UUID == "$isp_uuid" ]]
  xtest N1u t "CONNECTION_UUID correctly set"
  [[ $DCDFLAG == 0 ]]
  xtest N1d t "DCDFLAG=0"
  [[ $NM_CONFIG ]]
  xtest N1n t "NM_CONFIG is set"

  # DCDFLAG not set by dhclient
  DCDFLAG=''

  #
  # TEST: existing address in NM
  #
  xtest_settime 3500

  local -x new_ip6_address='2001:db8:800::2' new_ip6_prefixlen=128
  local -x new_iaid='a:b:c' new_rebind=600
  local -x new_max_life=4100 new_preferred_life=2100 new_life_starts=3400

  xtest_dhcp_action N11 REBIND6 "existing addr - a:b:c"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:800::2
	${xtest_dhcpmon/@TIMEOUT@/620}
	EOF
  ftest N11f "$out" "does nothing"
  xread_value out <<-EOF
	inet6:2001:db8:800::2/128
	iaid:abc
	valid-life:4100
	pref-life:2100
	life-start:3400
	rebind:600
	dad-state:ok
	EOF
  shtest::check_file N11s "$state1" "$out" "creates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3500
	EOF
  shtest::check_file N11c "$connstate2" "$out" "updates cstate"

  #
  # TEST: existing address updated lifetimes
  #
  xtest_settime 3550

  new_max_life=3600 new_preferred_life=1800 new_life_starts=3500

  xtest_dhcp_action N12 REBIND6 "update lifetimes - a:b:c"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:800::2
	${xtest_dhcpmon/@TIMEOUT@/670}
	EOF
  ftest N12f "$out" "updates lifetimes"
  xread_value out <<-EOF
	inet6:2001:db8:800::2/128
	iaid:abc
	valid-life:3600
	pref-life:1800
	life-start:3500
	rebind:600
	dad-state:ok
	EOF
  shtest::check_file N12s "$state1" "$out" "creates state file"
  xread_value out <<-EOF
	$init_cstate
	boot:3550
	EOF
  shtest::check_file N12c "$connstate2" "$out" "updates cstate"

  #
  # TEST: new address fails DAD
  #
  new_ip6_address='2001:db8:aaa::2' new_ip6_prefixlen=128 new_iaid='c:d:e'

  shtest::prefix "REBIND6 - addr DAD fail"
  var=0
  (
    # shellcheck disable=SC2030,SC2031
    local -x reason=REBIND6
    xwrap ipv6_dhcp_action
    echo "not reached"
  ) || var=$?
  vtest N13 3 ": exits 3"
  shtest::prefix " - "
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::2
	Address 2001:db8:aaa::2/128 has conflict on wan0
	Removing 2001:db8:aaa::2/128 from wan0
	ip '-6' 'addr' 'del' '2001:db8:aaa::2/128' 'dev' 'wan0'
	EOF
  ftest N13f "${out}" "adds, then removes new addr"
  [[ -e ${state3} ]]
  shtest::check_result N13s f "does not create new state"

  #
  # TEST: new address with dhcp dns
  #       1 dns routed
  #
  new_ip6_address='2001:db8:aaa::1' new_ip6_prefixlen=128
  new_iaid='c:d:e' new_rebind=0
  new_max_life=600 new_preferred_life=300 new_life_starts=3500
  local -x new_dhcp6_name_servers='2001:db8:aaa::100 2001:db8:222::1'
  local -x new_dhcp6_domain_search='dns-search.lan dns-search2.lan'

  xtest_dhcp_action N14 REBIND6 "new addr/dns - c:d:e, 1 dns routed"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::1
	nmcli 'conn' 'modify' '--temporary' '${isp_uuid}'\
 'ipv6.method' 'manual' 'ipv6.addresses'\
 '2001:db8:800::2/128,2001:db8:aaa::1/128'\
 'ipv6.dns' '2001:db8:aaa::100,2001:db8:222::1' 'ipv6.dns-search'\
 'dns-search.lan,dns-search2.lan'
	nmcli 'device' 'reapply' 'wan0'
	${xtest_dhcpmon/@TIMEOUT@/320}
	EOF
  ftest N14f "${out}" "adds addrs/dns, reapplies"
  xread_value out <<-EOF
	inet6:2001:db8:aaa::1/128
	iaid:cde
	valid-life:600
	pref-life:300
	life-start:3500
	rebind:0
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:dns-search.lan,dns-search2.lan
	dad-state:ok
	EOF
  shtest::check_file N14s "$state2" "$out" "creates state file"
  xread_value var <<-EOF
	$init_cstate
	boot:3550
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:dns-search.lan,dns-search2.lan
	reapply:yes
	EOF
  shtest::check_file N14c "$connstate2" "$var" "updates cstate dns"

  xtest_nm_action N14r reapply wan0 "succeeds"
  xread_value out <<-EOF
	ip '-6' 'route' 'replace' '2001:db8:222::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	EOF
  ftest N14x "${out}" "adds 1 dns route"
  var=${var/$'\n'reapply:yes/}
  shtest::check_file N14y "$connstate2" "$var" "clears cstate reapply"

  #
  # TEST: new address with dhcp+static dns
  #       2 dns routed
  #
  local -x new_dhcp6_name_servers='2001:db8:333::1'
  local -x new_dhcp6_domain_search='new-search.lan'

  xcat > "$wconf" <<-EOF
	WAN_STATIC_DNS6="2001:db8:444::1,2001:db8:aaa::200"
	WAN_STATIC_DNS6_SEARCH="static1.lan,static2.lan"
	EOF

  xtest_dhcp_action N15 REBIND6 "dhcp+static dns"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::1
	nmcli 'conn' 'modify' '--temporary' '${isp_uuid}'\
 'ipv6.method' 'manual' 'ipv6.addresses'\
 '2001:db8:aaa::1/128,2001:db8:800::2/128'\
 'ipv6.dns' '2001:db8:444::1,2001:db8:aaa::200,2001:db8:333::1'\
 'ipv6.dns-search' 'static1.lan,static2.lan,new-search.lan'
	nmcli 'device' 'reapply' 'wan0'
	${xtest_dhcpmon/@TIMEOUT@/320}
	EOF
  ftest N15f "${out}" "adds addr, dhcp+static dns, reapplies"
  xread_value out <<-EOF
	inet6:2001:db8:aaa::1/128
	iaid:cde
	valid-life:600
	pref-life:300
	life-start:3500
	rebind:0
	dns:2001:db8:333::1
	dns-search:new-search.lan
	dad-state:ok
	EOF
  shtest::check_file N15s "$state2" "$out" "updates state file"
  xread_value var <<-EOF
	$init_cstate
	boot:3550
	dns:2001:db8:444::1,2001:db8:aaa::200,2001:db8:333::1
	dns-search:static1.lan,static2.lan,new-search.lan
	reapply:yes
	EOF
  shtest::check_file N15c "$connstate2" "$var" "updates cstate dns"

  xtest_nm_action N15r reapply wan0 "succeeds"
  xread_value out <<-EOF
	ip '-6' 'route' 'replace' '2001:db8:444::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	ip '-6' 'route' 'replace' '2001:db8:333::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	EOF
  ftest N15x "${out}" "adds 2 dns routes"
  var=${var/$'\n'reapply:yes/}
  shtest::check_file N15y "$connstate2" "$var" "clears cstate reapply"

  #
  # TEST: existing address with dhcp+static dns and ignore-auto-dns
  #       1 dns routed
  #
  local -x NMCLI_MOCK_FORCE_ipv6_ignore_auto_dns=yes

  xtest_settime 3810
  new_rebind=800
  new_max_life=1200 new_preferred_life=1000 new_life_starts=3800

  xtest_dhcp_action N16 REBIND6 "ignore-auto-dns=yes"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::1
	${xtest_dhcpmon/@TIMEOUT@/410}
	EOF
  ftest N16f "${out}" "ignores dns change"
  xread_value out <<-EOF
	inet6:2001:db8:aaa::1/128
	iaid:cde
	valid-life:1200
	pref-life:1000
	life-start:3800
	rebind:800
	dns:2001:db8:333::1
	dns-search:new-search.lan
	dad-state:ok
	EOF
  shtest::check_file N16s "$state2" "$out" "updates state file"
  xread_value var <<-EOF
	$init_cstate
	boot:3810
	dns:2001:db8:444::1,2001:db8:aaa::200,2001:db8:333::1
	dns-search:static1.lan,static2.lan,new-search.lan
	EOF
  shtest::check_file N16c "$connstate2" "$var" "updates cstate, dns unchanged"

  xtest_nm_action N16r reapply wan0 "applies ignore-auto-dns"
  xread_value out <<-EOF
	nmcli 'conn' 'modify' '--temporary' '${isp_uuid}'\
 'ipv6.method' 'manual' 'ipv6.addresses'\
 '2001:db8:aaa::1/128,2001:db8:800::2/128' 'ipv6.dns'\
 '2001:db8:444::1,2001:db8:aaa::200' 'ipv6.dns-search'\
 'static1.lan,static2.lan'
	nmcli 'device' 'reapply' 'wan0'
	EOF
  ftest N16x "${out}" "reapplies"
  xread_value var <<-EOF
	${init_cstate/ignore-auto-dns:no/ignore-auto-dns:yes}
	boot:3810
	dns:2001:db8:444::1,2001:db8:aaa::200
	dns-search:static1.lan,static2.lan
	reapply:yes
	EOF
  shtest::check_file N16y "$connstate2" "$var" "updates cstate dns"

  xtest_nm_action N16g reapply wan0 "succeeds"
  xread_value out <<-EOF
	ip '-6' 'route' 'replace' '2001:db8:444::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0'
	EOF
  ftest N16h "$out" "adds 1 dns route"
  var=${var/$'\n'reapply:yes/}
  shtest::check_file N16i "$connstate2" "$var" "clears cstate reapply"

  # revert ignore-auto-dns
  unset NMCLI_MOCK_FORCE_ipv6_ignore_auto_dns
  echo "${var/ignore-auto-dns:yes/ignore-auto-dns:no}" >"$connstate2"

  #
  # TEST: existing address with dhcp dns, remove static dns, set route metric
  #
  local -x NMCLI_MOCK_FORCE_ipv6_route_metric=555

  xtest_settime 3810
  new_rebind=800
  new_max_life=1200 new_preferred_life=1000 new_life_starts=3800
  new_dhcp6_name_servers='2001:db8:aaa::100 2001:db8:222::1'
  new_dhcp6_domain_search='new-search.lan dhcp2.lan'

  printf "" > "$wconf"

  xtest_dhcp_action N17 REBIND6 "dhcp dns w/ route metric"
  xread_value out <<-EOF
	REBIND6 on wan0: 2001:db8:aaa::1
	nmcli 'conn' 'modify' '--temporary' '${isp_uuid}'\
 'ipv6.method' 'manual' 'ipv6.addresses'\
 '2001:db8:aaa::1/128,2001:db8:800::2/128'\
 'ipv6.dns' '2001:db8:aaa::100,2001:db8:222::1'\
 'ipv6.dns-search' 'new-search.lan,dhcp2.lan'
	nmcli 'device' 'reapply' 'wan0'
	${xtest_dhcpmon/@TIMEOUT@/410}
	EOF
  ftest N17f "${out}" "sets dhcp dns, reapplies"
  xread_value out <<-EOF
	inet6:2001:db8:aaa::1/128
	iaid:cde
	valid-life:1200
	pref-life:1000
	life-start:3800
	rebind:800
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:new-search.lan,dhcp2.lan
	dad-state:ok
	EOF
  shtest::check_file N17s "$state2" "$out" "updates state file"
  xread_value var <<-EOF
	$init_cstate
	boot:3810
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:new-search.lan,dhcp2.lan
	reapply:yes
	EOF
  shtest::check_file N17c "$connstate2" "$var" "updates cstate dns"

  xtest_nm_action N17r reapply wan0 "succeeds"
  xread_value out <<-EOF
	ip '-6' 'route' 'replace' '2001:db8:222::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0' 'metric' '555'
	EOF
  ftest N17x "${out}" "adds 1 dns route w/ metric"
  xread_value var <<-EOF
	$init_cstate
	boot:3810
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:new-search.lan,dhcp2.lan
	route-metric:555
	EOF
  shtest::check_file N17y "$connstate2" "$var" \
		     "updates cstate metric, clears reapply"

  #
  # TEST: release address
  #
  xtest_settime 4000

  local -x old_ip6_address='2001:db8:800::2' old_ip6_prefixlen=128
  local -x old_iaid='a:b:c' old_rebind=600
  local -x old_max_life=3600 old_preferred_life=1800 old_life_starts=3500
  local -x old_dhcp6_name_servers='2001:db8:aaa::100 2001:db8:222::1'
  local -x old_dhcp6_domain_search='new-search.lan dhcp2.lan'

  xtest_dhcp_action N20 RELEASE6 "release a:b:c addr"
  xread_value out <<-EOF
	RELEASE6 on wan0: 2001:db8:800::2
	nmcli 'conn' 'modify' '--temporary' '$isp_uuid'\
 'ipv6.method' 'manual' 'ipv6.addresses' '2001:db8:aaa::1/128'\
 'ipv6.dns' '2001:db8:aaa::100,2001:db8:222::1' 'ipv6.dns-search'\
 'new-search.lan,dhcp2.lan'
	nmcli 'device' 'reapply' 'wan0'
	EOF
  ftest N20f "${out}" "removes addr"
  [[ -e $state1 ]]
  xtest N20j f "removes a:b:c state"
  xread_value var <<-EOF
	$init_cstate
	boot:3810
	dns:2001:db8:aaa::100,2001:db8:222::1
	dns-search:new-search.lan,dhcp2.lan
	route-metric:555
	reapply:yes
	EOF
  shtest::check_file N20c "$connstate2" "$var" "cstate unchanged"

  xtest_nm_action N20r reapply wan0 "succeeds"
  xread_value out <<-EOF
	ip '-6' 'route' 'replace' '2001:db8:222::1' 'via'\
 'fe80::faaa:dead:beef:8000' 'dev' 'wan0' 'metric' '555'
	EOF
  ftest N20x "$out" "adds 1 dns route"
  var=${var/$'\n'reapply:yes/}
  shtest::check_file N20y "$connstate2" "$var" "clears cstate reapply"

  #
  # TEST: expire address
  #
  old_ip6_address='2001:db8:aaa::1' old_ip6_prefixlen=128
  old_iaid='c:d:e' old_rebind=800
  old_max_life=600 old_preferred_life=300 old_life_starts=3500
  old_dhcp6_name_servers='2001:db8:aaa::100 2001:db8:222::1'
  old_dhcp6_domain_search='new-search.lan dhcp2.lan'

  xtest_dhcp_action N30 EXPIRE6 "release c:d:e addr"
  xread_value out <<-EOF
	EXPIRE6 on wan0: 2001:db8:aaa::1
	nmcli 'conn' 'modify' '--temporary' '$isp_uuid'\
 'ipv6.method' 'link-local' 'ipv6.addresses' '' 'ipv6.dns' ''\
 'ipv6.dns-search' ''
	nmcli 'device' 'reapply' 'wan0'
	EOF
  ftest N30f "${out}" "removes addr"
  [[ -e $state2 ]]
  xtest N30j f "removes c:d:e state"
  xread_value var <<-EOF
	$init_cstate
	boot:3810
	route-metric:555
	reapply:yes
	EOF
  shtest::check_file N30c "$connstate2" "$var" "cstate unchanged"

  xtest_nm_action N30r reapply wan0 "succeeds"
  ftest N30x "" "does nothing"
  var=${var/$'\n'reapply:yes/}
  var=${var/method:manual/method:link-local}
  shtest::check_file N30y "$connstate2" "$var" \
		     "clears cstate reapply, sets method"

  nmddns_reset_config
  ipv6_wan_clear_config
  xtest_init_sysctls
  xtest::onexit::wan_nm
}

xtest::onexit::wan_ddns() {
  [[ -d $RUNDIR ]] || return 0
  command -p rm -f "$RUNDIR/"*"-dhc"
}

xtest::group4::wan_ddns() {

  shtest::title "WAN DDNS Tests (wan_ddns group)"

  # init state
  local -x interface=eth0
  local -x xtest_dhcpmon=${xtest_dhcpmon//wan0/eth0}
  local init_cstate
  xread_value init_cstate <<-EOF
	conn-uuid:${office_uuid}
	method:manual
	never-default:no
	ignore-auto-dns:no
	client:started
	EOF
  echo >"$connstate1" "$init_cstate"
  xtest_init_sysctls dhclient

  xtest_check_statevars D0 WAN_ADDR_STATE_PAT

  # rename for easy cleanup
  local WAN_ADDR_STATE_PAT="${WAN_ADDR_STATE_PAT}-dhc"
  local NMDDNS_STATE_PAT="${NMDDNS_STATE_PAT}-dhc"
  local WAN_CONFIG_PAT="$RUNDIR/ipv6-prefix-@WAN@.conf-dhc"
  local -x NMCLI_MOCK_SAVE="$RUNDIR/nmcli-save-dhc"

  # override for tests
  local wconf=${WAN_CONFIG_PAT/@WAN@/eth0}

  local hash1 hash2
  nmg::hash hash1 "2001:db8:871a:28c1::1/128"; hash1+="+1a1a"
  nmg::hash hash2 "2001:db8:4860:4860::8888/128"; hash2+="+2b2b"

  local wstate state1 state2
  wstate=${WAN_ADDR_STATE_PAT/@WAN@/eth0}
  state1=${wstate/@ID@/$hash1}
  state2=${wstate/@ID@/$hash2}

  # test variables
  local out var
  local -x DIG_MOCK_OUTPUT

  # reset
  xtest::onexit::wan_ddns

  #
  # TEST: add address to DDNS
  #
  printf "" > "$wconf"

  xtest_settime 4000

  local -x new_ip6_address='2001:db8:871a:28c1::1' new_ip6_prefixlen=128
  local -x new_iaid='1a:1a' new_rebind=1200
  local -x new_preferred_life=4294967295 new_max_life=4294967295
  local -x new_life_starts=4000

  xtest_dhcp_action D1 REBIND6 "addr to ddns"
  xread_value out <<-EOF
	REBIND6 on eth0: 2001:db8:871a:28c1::1
	Setting eth0.example.test AAAA to 2001:db8:871a:28c1::1
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete eth0.example.test AAAA
	update add eth0.example.test 600 AAAA 2001:db8:871a:28c1::1
	send
	${xtest_dhcpmon/@TIMEOUT@/1320}
	EOF
  ftest D1f "$out" "updates DNS"
  xread_value out <<-EOF
	inet6:2001:db8:871a:28c1::1/128
	iaid:1a1a
	valid-life:4294967295
	pref-life:4294967295
	life-start:4000
	rebind:1200
	dad-state:ok
	EOF
  shtest::check_file D1i "$state1" "$out" "creates state file"
  xread_value var <<-EOF
	$init_cstate
	boot:4000
	EOF
  shtest::check_file D1c "$connstate1" "$var" "updates cstate"

  DIG_MOCK_OUTPUT="2001:db8:871a:28c1::1"

  #
  # TEST: add 2nd address to DNS
  #
  new_ip6_address='2001:db8:4860:4860::8888' new_iaid='2b:2b'

  xtest_dhcp_action D2 REBIND6 "2nd addr to DNS"
  xread_value out <<-EOF
	REBIND6 on eth0: 2001:db8:4860:4860::8888
	nmcli 'conn' 'modify' '--temporary' '$office_uuid'\
 'ipv6.method' 'manual' 'ipv6.addresses'\
 '2001:db8:871a:28c1::1/128,2001:db8:4860:4860::8888/128'\
 'ipv6.dns' '' 'ipv6.dns-search' ''
	nmcli 'device' 'reapply' 'eth0'
	Setting eth0.example.test AAAA to\
 2001:db8:871a:28c1::1,2001:db8:4860:4860::8888
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete eth0.example.test AAAA
	update add eth0.example.test 600 AAAA 2001:db8:871a:28c1::1
	update add eth0.example.test 600 AAAA 2001:db8:4860:4860::8888
	send
	${xtest_dhcpmon/@TIMEOUT@/1320}
	EOF
  ftest D2f "$out" "adds DNS"
  xread_value out <<-EOF
	inet6:2001:db8:4860:4860::8888/128
	iaid:2b2b
	valid-life:4294967295
	pref-life:4294967295
	life-start:4000
	rebind:1200
	dad-state:ok
	EOF
  shtest::check_file D2j "$state2" "$out" "creates 2b2b state file"
  xread_value var <<-EOF
	$init_cstate
	boot:4000
	reapply:yes
	EOF
  shtest::check_file D2c "$connstate1" "$var" "updates cstate"

  xtest_nm_action D2r reapply eth0 "succeeds"
  ftest D2x "" "no action"
  var=${var/$'\n'reapply:yes/}
  shtest::check_file D2y "$connstate1" "$var" "clears cstate reapply"

  xread_value DIG_MOCK_OUTPUT <<-EOF
	2001:db8:4860:4860::8888
	2001:db8:871a:28c1::1
	EOF

  #
  # TEST: deprecate 2nd address, removed from DNS
  #
  local -x cur_ip6_address='2001:db8:4860:4860::8888' cur_ip6_prefixlen=128
  local -x cur_iaid='2b:2b' cur_rebind=1200
  local -x cur_preferred_life=0 cur_max_life=7200
  local -x cur_life_starts=4000

  xtest_dhcp_action D3 DEPREF6 "2nd addr to DNS"
  xread_value out <<-EOF
	DEPREF6 on eth0: 2001:db8:4860:4860::8888
	Setting eth0.example.test AAAA to 2001:db8:871a:28c1::1
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete eth0.example.test AAAA
	update add eth0.example.test 600 AAAA 2001:db8:871a:28c1::1
	send
	${xtest_dhcpmon/@TIMEOUT@/1320}
	EOF
  ftest D3f "$out" "adds DNS"
  xread_value out <<-EOF
	inet6:2001:db8:4860:4860::8888/128
	iaid:2b2b
	valid-life:7200
	pref-life:0
	life-start:4000
	rebind:1200
	dad-state:ok
	EOF
  shtest::check_file D3j "$state2" "$out" "creates 2b2b state file"
  xread_value var <<-EOF
	$init_cstate
	boot:4000
	EOF
  shtest::check_file D3c "$connstate1" "$var" "updates cstate"

  # reverse the depref
  xcat >"$state2" <<-EOF
	inet6:2001:db8:4860:4860::8888/128
	iaid:2b2b
	valid-life:4294967295
	pref-life:4294967295
	life-start:4000
	rebind:1200
	dad-state:ok
	EOF

  #
  # TEST: release address to DNS
  #
  unset new_ip6_address new_ip6_prefixlen new_iaid new_rebind
  unset new_preferred_life new_max_life new_life_starts
  local -x old_ip6_address='2001:db8:871a:28c1::1' old_ip6_prefixlen=128
  local -x old_iaid='1a:1a' old_rebind=1800

  xtest_dhcp_action D11 RELEASE6 "remove 1 addr"
  xread_value out <<-EOF
	RELEASE6 on eth0: 2001:db8:871a:28c1::1
	nmcli 'conn' 'modify' '--temporary' '${office_uuid}'\
 'ipv6.method' 'manual' 'ipv6.addresses' '2001:db8:4860:4860::8888/128'\
 'ipv6.dns' '' 'ipv6.dns-search' ''
	nmcli 'device' 'reapply' 'eth0'
	Setting eth0.example.test AAAA to 2001:db8:4860:4860::8888
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete eth0.example.test AAAA
	update add eth0.example.test 600 AAAA 2001:db8:4860:4860::8888
	send
	EOF
  ftest D11f "$out" "removes 1a1a from NM/DNS"
  [[ -e "$state1" ]]
  xtest D11i f "1a1a state file removed"
  [[ -e "$state2" ]]
  xtest D11j t "2b2b state file remains"
  xread_value var <<-EOF
	$init_cstate
	boot:4000
	reapply:yes
	EOF
  shtest::check_file D11c "$connstate1" "$var" "updates cstate"

  xtest_nm_action D11r reapply eth0 "succeeds"
  ftest D11x "" "no action"
  var=${var/$'\n'reapply:yes/}
  shtest::check_file D11y "$connstate1" "$var" "clears cstate reapply"

  #
  # TEST: release 2nd address to DNS
  #
  old_ip6_address='2001:db8:4860:4860::8888' old_ip6_prefixlen=128
  old_iaid='2b:2b'
  local -x DIG_MOCK_OUTPUT="2001:db8:4860:4860::8888"

  xtest_dhcp_action D12 RELEASE6 "remove 2nd addr"
  xread_value out <<-EOF
	RELEASE6 on eth0: 2001:db8:4860:4860::8888
	nmcli 'conn' 'modify' '--temporary' '${office_uuid}'\
 'ipv6.method' 'link-local' 'ipv6.addresses' '' 'ipv6.dns' ''\
 'ipv6.dns-search' ''
	nmcli 'device' 'reapply' 'eth0'
	Removing eth0.example.test AAAA
	nsupdate '-t' '2'
	server 127.0.0.1
	zone example.test
	update delete eth0.example.test AAAA
	send
	EOF
  ftest D12f "$out" "removes 2b2b from NM/DNS"

  [[ -e "$state2" ]]
  xtest D12j f "2b2b state file removed"
  xread_value var <<-EOF
	$init_cstate
	boot:4000
	reapply:yes
	EOF
  shtest::check_file D12c "$connstate1" "$var" "updates cstate"

  xtest_nm_action D12r reapply eth0 "succeeds"
  ftest D12x "" "no action"
  var=${var/$'\n'reapply:yes/}
  var=${var/method:manual/method:link-local}
  shtest::check_file D12y "$connstate1" "$var" "clears cstate reapply"

  nmddns_reset_config
  ipv6_wan_clear_config
  xtest_init_sysctls
  xtest::onexit::wan_ddns
}

xtest::onexit() {
  [[ ${WAN_CONNSTATE_PAT-} ]] && {
    local WAN_CONNSTATE_PAT="${WAN_CONNSTATE_PAT%-dhx}-dhx"
    xrm "${WAN_CONNSTATE_PAT/@WAN@/wan0}"
    xrm "${WAN_CONNSTATE_PAT/@WAN@/eth0}"
  }
  interface=wan0 xtest_init_sysctls
  interface=eth0 xtest_init_sysctls
}

xmain() {
  local SYSCTL_PAT="$RUNDIR/sysctls-@NODE@"
  local NMG_RADVD_TRIGGER="$TEST_BIN/radvd-trigger"

  # disable helper so we get nsupdate results
  local TEST_DDNS_HELPER=''

  # don't mimic cmdline
  unset LOGNAME

  local TEST_FILE="${TEST_NMDIR}/08-ipv6-prefix"
  xload_script "${TEST_FILE}"

  # make systemctl is-active fail so dhcpmon started
  local -x DUMMY_MOCK_FAIL_systemctl_mock=1
  local -x DUMMY_MOCK_FAIL_ARGS_systemctl_mock="'(is-active|is-failed)'"

  # xtest_dhcpmon contains @TIMEOUT@
  local xtest_dhcpmon
  xread_value xtest_dhcpmon <<-EOF
	systemctl '-q' 'is-active' 'dhcpmon-wan0.timer'
	systemctl '-q' 'is-active' 'dhcpmon-wan0'
	systemctl '-q' 'is-failed' 'dhcpmon-wan0'
	systemd-run '-u' 'dhcpmon-wan0' '--description'\
 'DHCP monitor on wan0' '--service-type=exec'\
 '--property=BindsTo=sys-subsystem-net-devices-wan0.device'\
 '--property=After=sys-subsystem-net-devices-wan0.device'\
 '--property=RestartSec=5' '--property=Restart=on-failure'\
 '--on-active=@TIMEOUT@'\
 '${TEST_FILE}' 'dhcp-monitor' 'wan0'
	EOF

  # create state file created when dhclient spawned
  local WAN_CONNSTATE_PAT="${WAN_CONNSTATE_PAT}-dhx"

  local connstate1=${WAN_CONNSTATE_PAT/@WAN@/eth0}
  local office_uuid="fd8bc2bb-9f55-47d6-a394-174f4ee4fe69"
  local connstate2=${WAN_CONNSTATE_PAT/@WAN@/wan0}
  local isp_uuid="9613d84e-2555-4e7f-a6c2-2a7da5f4d07b"

  # load wan config (dhcp client mode)
  local interface=wan0
  # force use of dhclient
  local -x DHCPCD=''

  xtest::run_tests "ipv6-prefix-dhclient-test Summary" "$@"
  local rc=$?

  xtest::onexit
  nmddns_cleanup

  return $rc
}

xstart "$@"
