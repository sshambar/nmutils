#!/bin/bash
# vim:set ft=sh et sw=2 ts=2:
#
# 09-ddns v1.2.0 - NetworkManager dispatch for ipv4 Dynamic DNS updates
# Author: Scott Shambarger <devel@shambarger.net>
#
# Copyright (C) 2014-2021 Scott Shambarger
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Instructions for use:
#
#   Put this script in /etc/NetworkManager/dispatcher.d (or wherever
#   your distro has these files), and nmddns-helper somewhere in
#   PATH.
#
#   The settings are discussed in NMUTILS/ddns-functions.
#
#   NOTE: By default, A and AAAA records use the global addresses
#   on an interface (see DDNS_RREC_<rrec>_PRIVATE to also consider
#   private addresses), so only set DDNS_RREC_A_VALUE or
#   DDNS_RREC_AAAA_VALUE if you wish to overrides those values
#   with static ones.
#
# Requires:
#
#   NMUTILS/ddns-functions - dynamic DNS functions
#   NMUTILS/general-functions - shared functions
#
# Config location:
#
#   NMCONF/ddns-<interface>.conf (see $NMUTILS/ddns-functions for settings)
#
# State file:
#
#   DDNS_STATE_DIR/ddns-<interface>-<rrec>.state
#
# shellcheck disable=SC1090,SC2153

interface=$1
action=$2

# for logging
NMG_TAG=${NMG_TAG:-nmddns}

# set NMUTILS/NMCONF early, and allow environment to override
NMUTILS=${NMUTILS:-/etc/nmutils}
NMCONF=${NMCONF:-${NMUTILS}/conf}

########## SCRIPT START

# anything for us to do?
[[ ${interface} && ${action} ]] || exit 0

# shellcheck disable=SC2034
NMDDNS_REQUIRED="1.4.4"

# load ddns-functions
NMDDNS=${NMDDNS:-${NMUTILS}/ddns-functions}
{ [[ -r ${NMDDNS} ]] && . "${NMDDNS}"; } || {
  echo 1>&2 "Unable to load ${NMDDNS}" && exit 2; }

[[ ${NMDDNS_VERSION} ]] || {
  nmg_err "${0##*/} requires NMDDNS v${NMDDNS_REQUIRED}+"; exit 2; }

# for convenience
DDNS_CONFIG=${NMDDNS_CONFIG_PAT/@MATCH@/${interface}}
DDNS_STATE_PAT=${NMDDNS_STATE_PAT/@MATCH@/${interface}}

function ddns_addr4() {
  # <retvar>
  local _priv='' _n _vname _addr _alist=()
  [[ ${DDNS_RREC_A_PRIVATE-} ]] && _priv=1

  # choose first public address
  for (( _n=0; _n < ${IP4_NUM_ADDRESSES:-0}; _n++ )); do
    _vname="IP4_ADDRESS_${_n}"
    # remove subnet/gateway
    _addr=${!_vname%%/*}
    nmg_check_ip4_addr "${_addr}" "${_priv}" && _alist+=("${_addr}")
  done
  local IFS=,; _addr="${_alist[*]-}"; unset IFS
  printf -v "$1" %s "${_addr}"
}

function ddns_addr6() {
  # <retvar>
  local _priv='' _n _vname _addr _alist=()
  [[ ${DDNS_RREC_AAAA_PRIVATE-} ]] && _priv=1

  # choose first public address
  for (( _n=0; _n < ${IP6_NUM_ADDRESSES:-0}; _n++ )); do
    _vname="IP6_ADDRESS_${_n}"
    # remove subnet/gateway
    _addr=${!_vname%%/*}
    nmg_check_ip6_addr "${_addr}" "${_priv}" && _alist+=("${_addr}")
  done
  local IFS=,; _addr="${_alist[*]-}"; unset IFS
  printf -v "$1" %s "${_addr}"
}

function ddns_action() {
  # <action>
  local addr4='' addr6=''
  [[ $1 == up ]] && {
    ddns_addr4 addr4
    ddns_addr6 addr6
  }
  nmddns_spawn_update_all \
    "$1" "${DDNS_CONFIG}" "${addr4}" "${addr6}" "${DDNS_STATE_PAT}"
}

nmg_debug "interface: $interface action: $action"

case ${action} in
  up|down|dhcp4-change|dhcp6-change)
    nmddns_read_config "${DDNS_CONFIG}" || exit 0
    ;;
esac

[[ -e ${DDNS_STATE_DIR} ]] || { nmg_cmd mkdir -p "${DDNS_STATE_DIR}" || exit; }

ADDRS=''
case ${action} in
  up|down)
    ddns_action "${action}"
    ;;
  dhcp4-change)
    ddns_addr4 ADDRS
    nmddns_spawn_update "${DDNS_CONFIG}" "A" "${ADDRS}" "${DDNS_STATE_PAT}"
    ;;
  dhcp6-change)
    ddns_addr6 ADDRS
    nmddns_spawn_update "${DDNS_CONFIG}" "AAAA" "${ADDRS}" "${DDNS_STATE_PAT}"
    ;;
esac

# Local Variables:
# mode: sh
# sh-basic-offset: 2
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
